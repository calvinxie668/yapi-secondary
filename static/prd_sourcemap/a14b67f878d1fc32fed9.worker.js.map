{"version":3,"sources":["webpack:///a14b67f878d1fc32fed9.worker.js","webpack:///webpack/bootstrap a14b67f878d1fc32fed9","webpack:///./containers/Capture/CaptureWorker.js","webpack:///../~/babel-runtime/core-js/json/stringify.js","webpack:///../~/core-js/library/fn/json/stringify.js","webpack:///../~/core-js/library/modules/_core.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_stringify","_stringify2","recordList","self","FILTERED_RECORD_LIST","defaultLimit","beginIndex","refreshing","endIndex","currentStateData","updateQueryTimer","filterObj","IN_DIFF","getFilterReg","filterStr","filterReg","regFilterStr","replace","length","substring","matchStr","$1","$2","RegExp","e","console","error","resetDisplayRecordIndex","calculateFilteredRecords","isFullyCalculate","listForThisTime","arguments","undefined","recordListbyfilter","type","filter","item","i","originIndex","itemStr","hasOwnProperty","test","push","forEach","index","findIndex","record","diffRecords","isForceUpdate","shouldUpdateRecord","Math","max","newStateRecords","slice","currentDataLength","newDataLength","targetItem","_render","postMessage","checkNewRecordsTip","newRecordLength","data","updateSingle","addEventListener","JSON","parse","clearTimeout","setTimeout","core","$JSON","stringify","it","apply","version","__e"],"mappings":"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","file":"a14b67f878d1fc32fed9.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _stringify = __webpack_require__(1);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar recordList = [];\n\tself.FILTERED_RECORD_LIST = [];\n\tvar defaultLimit = 100;\n\tself.beginIndex = 0;\n\tself.refreshing = true;\n\tself.endIndex = self.beginIndex + defaultLimit - 1;\n\tself.currentStateData = [];\n\tself.updateQueryTimer = null;\n\tself.filterObj = {};\n\tself.IN_DIFF = false; // mark if currently in diff working\n\t\n\t// diff the record, so when the refreshing is stoped, the page will not be updated\n\t// cause the filtered records will be unchanged\n\tvar getFilterReg = function getFilterReg(filterStr) {\n\t    var filterReg = null;\n\t    if (filterStr) {\n\t        var regFilterStr = filterStr.replace(/\\r\\n/g, '\\n').replace(/\\n\\n/g, '\\n');\n\t\n\t        // remove the last /\\n$/ in case an accidential br\n\t        regFilterStr = regFilterStr.replace(/\\n*$/, '');\n\t\n\t        if (regFilterStr[0] === '/' && regFilterStr[regFilterStr.length - 1] === '/') {\n\t            regFilterStr = regFilterStr.substring(1, regFilterStr.length - 2);\n\t        }\n\t\n\t        regFilterStr = regFilterStr.replace(/((.+)\\n|(.+)$)/g, function (matchStr, $1, $2) {\n\t            // if there is '\\n' in the string\n\t            if ($2) {\n\t                return '(' + $2 + ')|';\n\t            } else {\n\t                return '(' + $1 + ')';\n\t            }\n\t        });\n\t\n\t        try {\n\t            filterReg = new RegExp(regFilterStr);\n\t        } catch (e) {\n\t            console.error(e);\n\t        }\n\t    }\n\t\n\t    return filterReg;\n\t};\n\t\n\tself.resetDisplayRecordIndex = function () {\n\t    self.beginIndex = 0;\n\t    self.endIndex = self.beginIndex + defaultLimit - 1;\n\t};\n\t\n\tself.calculateFilteredRecords = function (isFullyCalculate) {\n\t    var listForThisTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\t\n\t    if (isFullyCalculate) {\n\t        self.FILTERED_RECORD_LIST = [];\n\t        var recordListbyfilter = [];\n\t        if (self.filterObj.type != undefined && self.filterObj.type != 'all') {\n\t            recordListbyfilter = recordList.filter(function (item) {\n\t                return item.type == self.filterObj.type;\n\t            });\n\t        } else {\n\t            recordListbyfilter = recordList;\n\t        }\n\t        var length = recordListbyfilter.length;\n\t        // filtered out the records\n\t        for (var i = 0; i < length; i++) {\n\t            var item = recordListbyfilter[i];\n\t            item.originIndex = i + 1;\n\t            var itemStr = (0, _stringify2.default)(item);\n\t            if (!self.filterObj['requestMsgType'] || item['request'] && item['request'].hasOwnProperty('requestMsgType') && item['request']['requestMsgType'] === self.filterObj['requestMsgType'] || item && item.hasOwnProperty('topicId') && item['topicId'] === self.filterObj['requestMsgType']) {\n\t                if (!self.filterObj['responseMsgType'] || item['response'] && item['response'].hasOwnProperty('responseMsgType') && item['response']['responseMsgType'] === self.filterObj['responseMsgType'] || item && item.hasOwnProperty('msgType') && item['msgType'] === self.filterObj['responseMsgType']) {\n\t                    if (!self.filterObj['key1'] || getFilterReg(self.filterObj['key1']).test(itemStr)) {\n\t                        if (!self.filterObj['key2'] || getFilterReg(self.filterObj['key2']).test(itemStr)) {\n\t                            if (!self.filterObj['key3'] || getFilterReg(self.filterObj['key3']).test(itemStr)) {\n\t                                self.FILTERED_RECORD_LIST.push(item);\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        listForThisTime.forEach(function (item) {\n\t            var index = self.FILTERED_RECORD_LIST.findIndex(function (record) {\n\t                return item.id === record.id;\n\t            });\n\t\n\t            if (index >= 0) {\n\t                self.FILTERED_RECORD_LIST[index] = item;\n\t            } else {\n\t                var _itemStr = (0, _stringify2.default)(item);\n\t                if (!self.filterObj['requestMsgType'] || item['request'] && item['request'].hasOwnProperty('requestMsgType') && item['request']['requestMsgType'] === self.filterObj['requestMsgType'] || item && item.hasOwnProperty('topicId') && item['topicId'] === self.filterObj['requestMsgType']) {\n\t                    if (!self.filterObj['responseMsgType'] || item['response'] && item['response'].hasOwnProperty('responseMsgType') && item['response']['responseMsgType'] === self.filterObj['responseMsgType'] || item && item.hasOwnProperty('msgType') && item['msgType'] === self.filterObj['responseMsgType']) {\n\t                        if (!self.filterObj['key1'] || getFilterReg(self.filterObj['key1']).test(_itemStr)) {\n\t                            if (!self.filterObj['key2'] || getFilterReg(self.filterObj['key2']).test(_itemStr)) {\n\t                                if (!self.filterObj['key3'] || getFilterReg(self.filterObj['key3']).test(_itemStr)) {\n\t                                    self.FILTERED_RECORD_LIST.push(item);\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        });\n\t    }\n\t};\n\t\n\tself.diffRecords = function () {\n\t    var isForceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t\n\t    if (self.IN_DIFF) {\n\t        return;\n\t    }\n\t    self.IN_DIFF = true;\n\t    var shouldUpdateRecord = true;\n\t\n\t    if (self.refreshing) {\n\t        self.beginIndex = Math.max(self.FILTERED_RECORD_LIST.length - 1 - defaultLimit, 0);\n\t        self.endIndex = self.FILTERED_RECORD_LIST.length - 1;\n\t    } else {\n\t        if (self.endIndex > self.FILTERED_RECORD_LIST.length) {\n\t            self.endIndex = self.FILTERED_RECORD_LIST.length;\n\t        }\n\t    }\n\t    var newStateRecords = self.FILTERED_RECORD_LIST.slice(self.beginIndex, self.endIndex + 1);\n\t    var currentDataLength = self.currentStateData.length;\n\t    var newDataLength = newStateRecords.length;\n\t\n\t    if (newDataLength !== currentDataLength) {\n\t        shouldUpdateRecord = true;\n\t    } else {\n\t        for (var i = 0; i < currentDataLength; i++) {\n\t            var item = self.currentStateData[i];\n\t            var targetItem = newStateRecords[i];\n\t            if (item.id !== targetItem.id || targetItem._render === true) {\n\t                shouldUpdateRecord = true;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t\n\t    self.currentStateData = newStateRecords;\n\t    self.postMessage((0, _stringify2.default)({\n\t        type: 'updateData',\n\t        isForceUpdate: isForceUpdate,\n\t        shouldUpdateRecord: shouldUpdateRecord,\n\t        recordList: newStateRecords\n\t    }));\n\t    self.IN_DIFF = false;\n\t};\n\t\n\t// check if there are many new records arrivied\n\tself.checkNewRecordsTip = function () {\n\t    if (self.IN_DIFF) {\n\t        return;\n\t    }\n\t    var newRecordLength = self.FILTERED_RECORD_LIST.length;\n\t    self.postMessage((0, _stringify2.default)({\n\t        type: 'updateTip',\n\t        data: newRecordLength - self.endIndex > 0\n\t    }));\n\t};\n\t\n\tself.updateSingle = function (record) {\n\t    var index = recordList.findIndex(function (item) {\n\t        return item.id === record.id;\n\t    });\n\t\n\t    if (index >= 0) {\n\t        // set the mark to ensure the item get re-rendered\n\t        record._render = true;\n\t        recordList[index] = record;\n\t    } else {\n\t        recordList.push(record);\n\t    }\n\t\n\t    recordList.forEach(function (item, index) {\n\t        item._render = false;\n\t        item.originIndex = index + 1;\n\t    });\n\t    if (self.filterObj.type != undefined && self.filterObj.type != 'all') {\n\t        if (record.type == self.filterObj.type) {\n\t            // 筛选pull /push\n\t            self.calculateFilteredRecords(false, [record]);\n\t        }\n\t    } else {\n\t        self.calculateFilteredRecords(false, [record]);\n\t    }\n\t};\n\t\n\tself.addEventListener('message', function (e) {\n\t    var data = JSON.parse(e.data);\n\t    switch (data.type) {\n\t        case 'initRecord':\n\t            {\n\t                recordList = data.data;\n\t                self.calculateFilteredRecords(true);\n\t                self.diffRecords(true);\n\t                break;\n\t            }\n\t\n\t        case 'updateQuery':\n\t            {\n\t                // if filterStr or limit changed\n\t                //  self.refreshing = data.refreshing;\n\t                // if (data.filterStr !== self.filterStr) {\n\t                self.updateQueryTimer && clearTimeout(self.updateQueryTimer);\n\t                self.updateQueryTimer = setTimeout(function () {\n\t                    // self.resetDisplayRecordIndex();\n\t                    self.filterObj = data.filterObj;\n\t                    self.calculateFilteredRecords(true);\n\t                    self.diffRecords();\n\t                }, 150);\n\t                // }\n\t                break;\n\t            }\n\t\n\t        case 'updateSingle':\n\t            {\n\t                self.updateSingle(data.data);\n\t                if (self.refreshing) {\n\t                    self.diffRecords();\n\t                } else {\n\t                    self.checkNewRecordsTip();\n\t                }\n\t                break;\n\t            }\n\t\n\t        case 'loadMore':\n\t            {\n\t                if (self.IN_DIFF) {\n\t                    return;\n\t                }\n\t                self.refreshing = false;\n\t                if (data.data > 0) {\n\t                    self.endIndex += data.data;\n\t                } else {\n\t                    self.beginIndex = Math.max(self.beginIndex + data.data, 0);\n\t                }\n\t                self.diffRecords(true);\n\t                break;\n\t            }\n\t\n\t        case 'clear':\n\t            {\n\t                recordList = [];\n\t                self.calculateFilteredRecords(true);\n\t                self.diffRecords();\n\t                break;\n\t            }\n\t\n\t        case 'updateRefreshing':\n\t            {\n\t                if (typeof data.refreshing === 'boolean') {\n\t                    self.refreshing = data.refreshing;\n\t                    if (self.refreshing) {\n\t                        self.diffRecords();\n\t                    } else {\n\t                        self.checkNewRecordsTip();\n\t                    }\n\t                }\n\t                break;\n\t            }\n\t        default:\n\t            {\n\t                break;\n\t            }\n\t    }\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(2), __esModule: true };\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar core = __webpack_require__(3);\n\tvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\n\tmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n\t  return $JSON.stringify.apply($JSON, arguments);\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = { version: '2.6.12' };\n\tif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// a14b67f878d1fc32fed9.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a14b67f878d1fc32fed9","let recordList = [];\nself.FILTERED_RECORD_LIST = [];\nconst defaultLimit = 100;\nself.beginIndex = 0;\nself.refreshing = true;\nself.endIndex = self.beginIndex + defaultLimit - 1;\nself.currentStateData = [];\nself.updateQueryTimer = null;\nself.filterObj = {};\nself.IN_DIFF = false; // mark if currently in diff working\n\n// diff the record, so when the refreshing is stoped, the page will not be updated\n// cause the filtered records will be unchanged\nconst getFilterReg = function (filterStr) {\n    let filterReg = null;\n    if (filterStr) {\n      let regFilterStr = filterStr\n        .replace(/\\r\\n/g, '\\n')\n        .replace(/\\n\\n/g, '\\n');\n  \n      // remove the last /\\n$/ in case an accidential br\n      regFilterStr = regFilterStr.replace(/\\n*$/, '');\n  \n      if (regFilterStr[0] === '/' && regFilterStr[regFilterStr.length - 1] === '/') {\n        regFilterStr = regFilterStr.substring(1, regFilterStr.length - 2);\n      }\n  \n      regFilterStr = regFilterStr.replace(/((.+)\\n|(.+)$)/g, (matchStr, $1, $2) => {\n        // if there is '\\n' in the string\n        if ($2) {\n          return `(${$2})|`;\n        } else {\n          return `(${$1})`;\n        }\n      });\n  \n      try {\n        filterReg = new RegExp(regFilterStr);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  \n    return filterReg;\n};\n\nself.resetDisplayRecordIndex = function () {\n    self.beginIndex = 0;\n    self.endIndex = self.beginIndex + defaultLimit - 1;\n};\n\nself.calculateFilteredRecords = function (isFullyCalculate, listForThisTime = []) {\n    if (isFullyCalculate) {\n        self.FILTERED_RECORD_LIST = [];\n        let recordListbyfilter = []\n        if(self.filterObj.type != undefined && self.filterObj.type != 'all') {\n          recordListbyfilter  = recordList.filter(item => item.type == self.filterObj.type);\n        } else {\n          recordListbyfilter = recordList;\n        }\n        const length = recordListbyfilter.length;\n        // filtered out the records\n        for (let i = 0; i < length; i++) {\n            let item = recordListbyfilter[i];\n            item.originIndex = i + 1;\n            const itemStr = JSON.stringify(item);\n            if(!self.filterObj['requestMsgType'] || (item['request'] && item['request'].hasOwnProperty('requestMsgType') && item['request']['requestMsgType'] === self.filterObj['requestMsgType']) || (item && item.hasOwnProperty('topicId') && item['topicId'] === self.filterObj['requestMsgType'])) {\n                if(!self.filterObj['responseMsgType'] || (item['response'] && item['response'].hasOwnProperty('responseMsgType') && item['response']['responseMsgType'] === self.filterObj['responseMsgType']) || (item && item.hasOwnProperty('msgType') && item['msgType'] === self.filterObj['responseMsgType'])) {\n                    if(!self.filterObj['key1'] || getFilterReg(self.filterObj['key1']).test(itemStr)) {\n                        if(!self.filterObj['key2'] || getFilterReg(self.filterObj['key2']).test(itemStr)) {\n                            if(!self.filterObj['key3'] || getFilterReg(self.filterObj['key3']).test(itemStr)) {\n                                self.FILTERED_RECORD_LIST.push(item);\n                            }\n                        }\n                    }\n                } \n            }\n        }\n    } else {\n        listForThisTime.forEach((item) => {\n          const index = self.FILTERED_RECORD_LIST.findIndex((record) => {\n            return item.id === record.id;\n          });\n    \n          if (index >= 0) {\n            self.FILTERED_RECORD_LIST[index] = item;\n          } else {\n            const itemStr = JSON.stringify(item);  \n            if(!self.filterObj['requestMsgType'] || (item['request'] && item['request'].hasOwnProperty('requestMsgType') && item['request']['requestMsgType'] === self.filterObj['requestMsgType']) || (item && item.hasOwnProperty('topicId') && item['topicId'] === self.filterObj['requestMsgType'])) {\n                if(!self.filterObj['responseMsgType'] || (item['response'] && item['response'].hasOwnProperty('responseMsgType') && item['response']['responseMsgType'] === self.filterObj['responseMsgType']) || (item && item.hasOwnProperty('msgType') && item['msgType'] === self.filterObj['responseMsgType'])) {\n                    if(!self.filterObj['key1'] || getFilterReg(self.filterObj['key1']).test(itemStr)) {\n                        if(!self.filterObj['key2'] || getFilterReg(self.filterObj['key2']).test(itemStr)) {\n                            if(!self.filterObj['key3'] || getFilterReg(self.filterObj['key3']).test(itemStr)) {\n                                self.FILTERED_RECORD_LIST.push(item);\n                            }\n                        }\n                    }\n                } \n            }\n          }\n        });\n    }\n}\n\nself.diffRecords = function (isForceUpdate = false) {\n    if(self.IN_DIFF) {\n        return;\n    }\n    self.IN_DIFF = true;\n    let shouldUpdateRecord = true;\n\n    if(self.refreshing) {\n        self.beginIndex = Math.max(self.FILTERED_RECORD_LIST.length - 1 - defaultLimit, 0);\n        self.endIndex = self.FILTERED_RECORD_LIST.length - 1; \n    } else {\n        if(self.endIndex > self.FILTERED_RECORD_LIST.length) {\n            self.endIndex = self.FILTERED_RECORD_LIST.length;\n        } \n    }\n    const newStateRecords = self.FILTERED_RECORD_LIST.slice(self.beginIndex, self.endIndex + 1);\n    const currentDataLength = self.currentStateData.length;\n    const newDataLength = newStateRecords.length;\n\n    if(newDataLength !== currentDataLength) {\n        shouldUpdateRecord = true;\n    } else {\n        for(let i = 0; i < currentDataLength; i++) {\n            const item = self.currentStateData[i];\n            const targetItem = newStateRecords[i];\n            if(item.id !== targetItem.id || targetItem._render === true) {\n                shouldUpdateRecord = true;\n                break;\n            }\n        }\n    }\n\n\t\tself.currentStateData = newStateRecords;\n    self.postMessage(JSON.stringify({\n        type: 'updateData',\n        isForceUpdate,\n        shouldUpdateRecord,\n        recordList: newStateRecords\n    }));\n    self.IN_DIFF = false;\n}\n\n// check if there are many new records arrivied\nself.checkNewRecordsTip = function () {\n    if (self.IN_DIFF) {\n      return;\n    }\n    const newRecordLength = self.FILTERED_RECORD_LIST.length;\n    self.postMessage(JSON.stringify({\n      type: 'updateTip',\n      data: (newRecordLength - self.endIndex) > 0\n    }));\n};\n\nself.updateSingle = function (record) {\n    const index = recordList.findIndex((item) => {\n      return item.id === record.id;\n    });\n  \n    if (index >= 0) {\n      // set the mark to ensure the item get re-rendered\n      record._render = true;\n      recordList[index] = record;\n    } else {\n      recordList.push(record);\n    }\n\n    recordList.forEach((item, index) => {\n      item._render = false;\n      item.originIndex = index + 1;\n\t\t});\n\t\tif (self.filterObj.type != undefined && self.filterObj.type != 'all') {\n\t\t\tif (record.type == self.filterObj.type) {\n\t\t\t\t// 筛选pull /push\n\t\t\t\tself.calculateFilteredRecords(false, [record]);\n\t\t\t}\n\t\t} else {\n\t\t\t\tself.calculateFilteredRecords(false, [record]);\n\t\t}\n};\n\nself.addEventListener('message', e => {\n    const data = JSON.parse(e.data);\n    switch (data.type) {\n        case 'initRecord': {\n            recordList = data.data;\n            self.calculateFilteredRecords(true);\n            self.diffRecords(true);\n            break;\n        }\n\n        case 'updateQuery': {\n            // if filterStr or limit changed\n              //  self.refreshing = data.refreshing;\n            // if (data.filterStr !== self.filterStr) {\n              self.updateQueryTimer && clearTimeout(self.updateQueryTimer);\n              self.updateQueryTimer = setTimeout(() => {\n                // self.resetDisplayRecordIndex();\n                self.filterObj = data.filterObj;\n                self.calculateFilteredRecords(true);\n                self.diffRecords();\n              }, 150);\n            // }\n            break;\n        }\n\n        case 'updateSingle': {\n            self.updateSingle(data.data);\n            if (self.refreshing) {\n              self.diffRecords();\n            } else {\n              self.checkNewRecordsTip();\n            }\n            break;\n        }\n\n        case 'loadMore': {\n            if (self.IN_DIFF) {\n              return;\n            }\n            self.refreshing = false;\n            if (data.data > 0) {\n              self.endIndex += data.data;\n            } else {\n              self.beginIndex = Math.max(self.beginIndex + data.data, 0);\n            }\n            self.diffRecords(true);\n            break;\n        }\n\n        case 'clear': {\n            recordList = [];\n            self.calculateFilteredRecords(true);\n            self.diffRecords();\n            break;\n        }\n\n        case 'updateRefreshing': {\n            if (typeof data.refreshing === 'boolean') {\n              self.refreshing = data.refreshing;\n              if (self.refreshing) {\n                self.diffRecords();\n              } else {\n                self.checkNewRecordsTip();\n              }\n            }\n            break;\n          }\n        default: {\n            break;\n        }\n    }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./containers/Capture/CaptureWorker.js","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/babel-runtime/core-js/json/stringify.js\n// module id = 1\n// module chunks = 0","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/core-js/library/fn/json/stringify.js\n// module id = 2\n// module chunks = 0","var core = module.exports = { version: '2.6.12' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/core-js/library/modules/_core.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}